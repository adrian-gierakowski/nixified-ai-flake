diff --git a/__init__.py b/__init__.py
index cf50941..fd699a4 100644
--- a/__init__.py
+++ b/__init__.py
@@ -6,7 +6,8 @@ import os
 import folder_paths
 import importlib

-cwd_path = os.path.dirname(os.path.realpath(__file__))
+from .paths import easy_use_path
+
 comfy_path = folder_paths.base_path

 NODE_CLASS_MAPPINGS = {}
@@ -20,12 +21,15 @@ for module_name in nodes_list:
     NODE_CLASS_MAPPINGS = {**NODE_CLASS_MAPPINGS, **imported_module.NODE_CLASS_MAPPINGS}
     NODE_DISPLAY_NAME_MAPPINGS = {**NODE_DISPLAY_NAME_MAPPINGS, **imported_module.NODE_DISPLAY_NAME_MAPPINGS}

+if not os.path.exists(easy_use_path):
+    os.makedirs(easy_use_path, exist_ok=True)
+
 #Wildcards
 from .py.libs.wildcards import read_wildcard_dict
-wildcards_path = os.path.join(os.path.dirname(__file__), "wildcards")
+wildcards_path = os.path.join(easy_use_path, "wildcards")
 if not os.path.exists(wildcards_path):
     os.mkdir(wildcards_path)
-
+
 # Add custom wildcards example
 example_path = os.path.join(wildcards_path, "example.txt")
 if not os.path.exists(example_path):
@@ -35,8 +39,8 @@ if not os.path.exists(example_path):
 read_wildcard_dict(wildcards_path)

 #Styles
-styles_path = os.path.join(os.path.dirname(__file__), "styles")
-samples_path = os.path.join(os.path.dirname(__file__), "styles", "samples")
+styles_path = os.path.join(easy_use_path, "styles")
+samples_path = os.path.join(easy_use_path, "styles", "samples")
 if os.path.exists(styles_path):
     if not os.path.exists(samples_path):
         os.mkdir(samples_path)
@@ -63,7 +67,7 @@ if not os.path.exists(example_path):

 web_default_version = 'v2'
 # web directory
-config_path = os.path.join(cwd_path, "config.yaml")
+config_path = os.path.join(easy_use_path, "config.yaml")
 if os.path.isfile(config_path):
     with open(config_path, 'r') as f:
         data = yaml.load(f, Loader=yaml.FullLoader)
@@ -81,7 +85,7 @@ if os.path.isfile(config_path):
             directory = f"web_version/{web_default_version}"
         else:
             directory = f"web_version/v1"
-    if not os.path.exists(os.path.join(cwd_path, directory)):
+    if not os.path.exists(os.path.join(easy_use_path, directory)):
         print(f"web root {data['WEB_VERSION']} not found, using default")
         directory = f"web_version/{web_default_version}"
     WEB_DIRECTORY = directory
@@ -92,4 +96,4 @@ else:
 __all__ = ['NODE_CLASS_MAPPINGS', 'NODE_DISPLAY_NAME_MAPPINGS', "WEB_DIRECTORY"]

 print(f'\033[34m[ComfyUI-Easy-Use] server: \033[0mv{__version__} \033[92mLoaded\033[0m')
-print(f'\033[34m[ComfyUI-Easy-Use] web root: \033[0m{os.path.join(cwd_path, directory)} \033[92mLoaded\033[0m')
+print(f'\033[34m[ComfyUI-Easy-Use] web root: \033[0m{os.path.join(easy_use_path, directory)} \033[92mLoaded\033[0m')
diff --git a/paths.py b/paths.py
new file mode 100644
index 0000000..2cc3494
--- /dev/null
+++ b/paths.py
@@ -0,0 +1,7 @@
+import os
+import folder_paths
+
+easy_use_path = os.getenv(
+    "EASY_USE_PATH",
+    os.path.join(folder_paths.base_path, "custom_nodes_data", "easy_use")
+)
diff --git a/py/config.py b/py/config.py
index dee0a4b..0289c34 100644
--- a/py/config.py
+++ b/py/config.py
@@ -1,6 +1,7 @@
 import os
 import folder_paths
 from pathlib import Path
+from ..paths import easy_use_path

 BASE_RESOLUTIONS = [
     ("width", "height"),
@@ -37,12 +38,12 @@ BASE_RESOLUTIONS = [
 ]
 MAX_SEED_NUM = 1125899906842624

-
+config_path = os.path.join(easy_use_path, 'config.yaml')
 RESOURCES_DIR = os.path.join(Path(__file__).parent.parent, "resources")

 # inpaint
 INPAINT_DIR = os.path.join(folder_paths.models_dir, "inpaint")
-FOOOCUS_STYLES_DIR = os.path.join(Path(__file__).parent.parent, "styles")
+FOOOCUS_STYLES_DIR = os.path.join(easy_use_path, "styles")
 FOOOCUS_STYLES_SAMPLES = 'https://raw.githubusercontent.com/lllyasviel/Fooocus/main/sdxl_styles/samples/'
 FOOOCUS_INPAINT_HEAD = {
     "fooocus_inpaint_head": {
diff --git a/py/libs/api/bizyair.py b/py/libs/api/bizyair.py
index b7b4581..b711641 100644
--- a/py/libs/api/bizyair.py
+++ b/py/libs/api/bizyair.py
@@ -12,14 +12,12 @@ import urllib.error
 from enum import Enum
 from functools import singledispatch
 from typing import Any, List, Union
+from ...config import config_path

 import numpy as np
 import torch
 from PIL import Image

-root_path = pathlib.Path(__file__).parent.parent.parent.parent
-config_path = os.path.join(root_path, 'config.yaml')
-
 class BizyAIRAPI:
     def __init__(self):
         self.base_url = 'https://bizyair-api.siliconflow.cn/x/v1'
diff --git a/py/libs/api/fluxai.py b/py/libs/api/fluxai.py
index eaaa4d4..8812fdf 100644
--- a/py/libs/api/fluxai.py
+++ b/py/libs/api/fluxai.py
@@ -4,9 +4,8 @@ import yaml
 import requests
 import pathlib
 from aiohttp import web
+from ...config import config_path

-root_path = pathlib.Path(__file__).parent.parent.parent.parent
-config_path = os.path.join(root_path,'config.yaml')
 class FluxAIAPI:
     def __init__(self):
         self.api_url = "https://fluxaiimagegenerator.com/api"
diff --git a/py/libs/api/stability.py b/py/libs/api/stability.py
index 3b40db2..4f96765 100644
--- a/py/libs/api/stability.py
+++ b/py/libs/api/stability.py
@@ -7,10 +7,8 @@ from aiohttp import web
 from server import PromptServer
 from ..image import tensor2pil, pil2tensor, image2base64, pil2byte
 from ..log import log_node_error
+from ...config import config_path

-
-root_path = pathlib.Path(__file__).parent.parent.parent.parent
-config_path = os.path.join(root_path,'config.yaml')
 default_key = [{'name':'Default', 'key':''}]


